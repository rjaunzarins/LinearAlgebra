This program uses gauss-jordan elimination on a matrix to solve for x1, x2, and x3 (x,y,z).
It uses a Fraction class to be able to calcuate reduced echelon form with fractions or ints.

It does this in multiple steps:
    
    The following matrix shows which step each element is calculated in. 
    Each number is the step it is calculate in. The values in column 4
    will be calculated in the steps. 

    | 1 4 6 0 |   Row 1 - Elements: (0,0), (0,1), (0,2)   - x1 = (0,0)
    | 2 3 6 0 |   Row 2 - Elements: (1,0), (1,1), (1,2)   - x2 = (1,1)
    | 2 4 5 0 |   Row 3 - Elements: (2,0), (2,1), (2,2)   - x3 = (2,2)

    Elements (1,3), (2,3), and (3,3) are not explicitly used and are calculated based on
    each function. These will be the coefficients x, y, and z are equal to.

        Row 1, 2, and 3 are referenced in output
        Internally, the proper elements are used

    Step 1: Get 1 in x1 (element (0,0)):
            - If x1 already has a one, do nothing
            - If x1 is 0, swap row1 and a row that begins with a non-zero number.
                -> if row2 or row3 begins with 1, this will be selected first
            - If x1 is non-zero and not 1, divide row by itself to get 1 in x1

                | 1 0 0 |   
                | 0 0 0 |  
                | 0 0 0 |  

    Step 2: Get zeros below x1 (column 1):
            - Since x1 is already 1, check for zero in first element of the other rows
                -> if not zero, reduce row by subtracting row1 * 1st element

                | 0 0 0 |   
                | 2 0 0 |  
                | 2 0 0 |

    Step 3: Get 1 in x2 (element (1,1)):
            - If possible use row elimination to get 1 in x2    
            - If not possible divide the row by value in (1,1)

                | 0 0 0 |   
                | 0 3 0 |  
                | 0 0 0 |

    Step 4: Get zeros above and below x2 - (0,1) and (2,1):
            - Check for zeros already in the elements
                -> If not, use the 1 in x2 to use row reduction on row1 and row3

                | 0 4 0 |   
                | 0 0 0 |  
                | 0 4 0 |

    Step 5: Get 1 in x3 (element (2,2)):
            - Check if element is already 1
                -> if not, divide the row by x3 (2,2)

                | 0 0 0 |   
                | 0 0 0 |  
                | 0 0 5 |

    Step 6: Get zeros above x3 - (0,2) and (1,2):
            - Check if elements are already zero    
                -> If not, use row reduction to get zeros in each element

                | 0 0 6 |   
                | 0 0 6 |  
                | 0 0 0 |

    This results in the augmented identity matrix:

                | 1 0 0 X |   Where X, Y, and Z are the the coefficients of each variable.
                | 0 1 0 Y |  
                | 0 0 1 Z |